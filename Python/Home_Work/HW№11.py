"""
Завдання 1.	Дано рядок тексту, в якому слова розділені пропусками.
Надрукуйте всі слова, які зустрічаються в тексті,
та їхні частоти як у вихідних даних. Результатом поверніть словник.
________________________________________
Вхідні дані:
one two three one four five seven ten seven one
Вихідні дані:
{one: 3, two: 1, three:1, four: 1, five: 1, seven: 2, ten: 1}
"""
# Варіант№1
text = "one two three one four five seven ten seven one"
words = text.split()
#Метод split() використовується для розбиття рядка на список слів.
# За замовчуванням він розбиває рядок за пробілами,
# тобто кожне слово стає окремим елементом списку.
# У результаті ми отримуємо список слів:
word_dic = {}

for word in words:
    if word in word_dic:
        word_dic[word] += 1
    else:
        word_dic[word] = 1
print(word_dic)
#{'one': 3, 'two': 1, 'three': 1, 'four': 1, 'five': 1, 'seven': 2, 'ten': 1}

# Варіант№2
text = "one two three one four five seven ten seven one"
words = text.split()
word_dic = {}

for word in words:
    word_dic[word] = words.count(word)
print(word_dic)

#var.#3

words = 'one two three one four five seven ten seven one'.split()

#var1
result = {}
for el in words:
    result[el] = words.count(el)
print(result)

#var2
result = {}
for el in words:
    if el in result:
        result[el] += 1
    else:   #якщо ключа el не існує
        result[el] = 1
print(result)

#var3
result = {}
for el in words:
    result[el] = result.get(el, 0) + 1
print(result)

#var4
result = {el: words.count(el) for el in words}
print(result)

"""
Завдання 2.	Напишіть програму для видалення кожного третього елемента 
із цілочисельного списку і друку результуючого списку, 
доки список не стане порожнім. Початковий список цілих чисел вводиться 
в одному рядку через пропуск.
________________________________________
Вхідні дані:
2 5 8 9 4 78 7 1
Вихідні дані:
[2, 5, 9, 4, 78, 7, 1]
[2, 5, 4, 78, 7, 1]
[2, 5, 78, 7, 1]
[2, 5, 7, 1]
[2, 5, 1]
[2, 5]
[5]
[]
"""

text = input("Введіть числа через пробіл: ")
list_num = text.split()
numbers = []
for el in list_num:
    numbers.append(int(el))
while numbers:
    index = 2 % len(numbers)
    del numbers[index]
    print(numbers)

"""
Що таке оператор %?
Оператор % (модуль) повертає остачу від ділення одного числа на інше. 

Наприклад:
a % b означає: "Яка остача залишиться, якщо поділити a на b?"

Як обчислюється 2 % 8?
Ділення: Ми ділимо 2 на 8.
2 ÷ 8 = 0.25 (але нас цікавить лише ціла частина).
Ціла частина ділення: 0 (бо 8 не вміщується в 2 жодного разу).
Множення: Помножуємо цілу частину ділення на дільник:
0 * 8 = 0.
Остача: Віднімаємо результат множення від діленого:
2 - 0 = 2.
Отже, остача від ділення 2 на 8 дорівнює 2.

Математичний запис
У математиці це можна записати так:

Copy
2 = 8 * 0 + 2
8 * 0 — це результат множення дільника на цілу частину ділення.
2 — це остача.

Чому це важливо?
У контексті нашого завдання:
Ми хочемо видалити третій елемент списку, який має індекс 2 (оскільки індексація починається з 0).
Якщо список має довжину 8, то 2 % 8 = 2, і ми видаляємо елемент з індексом 2.

Приклади інших обчислень
Приклад 1: 5 % 3
Ділення: 5 ÷ 3 = 1 (ціла частина).
Множення: 1 * 3 = 3.
Остача: 5 - 3 = 2.
Отже, 5 % 3 = 2.

Приклад 2: 10 % 4
Ділення: 10 ÷ 4 = 2 (ціла частина).
Множення: 2 * 4 = 8.
Остача: 10 - 8 = 2.
Отже, 10 % 4 = 2.

Приклад 3: 7 % 7
Ділення: 7 ÷ 7 = 1 (ціла частина).
Множення: 1 * 7 = 7.
Остача: 7 - 7 = 0.
Отже, 7 % 7 = 0.

index = 2 % len(numbers)
2 — це індекс третього елемента.
len(numbers) — довжина списку.
2 % len(numbers) гарантує, що індекс завжди буде в межах списку, 
навіть якщо список коротший за 3 елементи.

Наприклад:
Якщо len(numbers) = 8, то 2 % 8 = 2 (індекс третього елемента).
Якщо len(numbers) = 2, то 2 % 2 = 0 (індекс першого елемента, оскільки третього немає).

Підсумок
2 % 8 = 2, тому що при діленні 2 на 8 остача дорівнює 2.
Це дозволяє нам безпечно обчислювати індекс третього елемента, 
навіть якщо список коротший за 3 елементи.
"""


"""
Завдання 3. Використайте словник для виведення представлення букви, 
яку вводить користувач, у символах азбуки Морзе. 
Передбачте у програмі обробку малих і великих букв. 
*Зробіть програму, яка весь текст переводить в готову азбуку Морзе.
________________________________________
Вхідні дані:
D
f
Вихідні дані:
-..
..-.
___________________________________________
morze = {'a': '•—', 'b': '—•••', 'c': '—•—•', 'd': '—••',
         'e': '•', 'f': '••—•', 'g': '——•', 'h': '••••',
         'i': '••', 'j': '•———', 'k': '—•—', 'l': '•—••',
         'm': '——', 'n': '—•', 'o': '———', 'p': '•——•',
         'q': '——•—', 'r': '•—•', 's': '•••', 't': '—',
         'u': '••—', 'v': '•••—', 'w': '•——', 'x': '—••—',
         'y': '—•——', 'z': '——••'}
print(morze)
"""
morze = {
    'a': '•—', 'b': '—•••', 'c': '—•—•', 'd': '—••',
    'e': '•', 'f': '••—•', 'g': '——•', 'h': '••••',
    'i': '••', 'j': '•———', 'k': '—•—', 'l': '•—••',
    'm': '——', 'n': '—•', 'o': '———', 'p': '•——•',
    'q': '——•—', 'r': '•—•', 's': '•••', 't': '—',
    'u': '••—', 'v': '•••—', 'w': '•——', 'x': '—••—',
    'y': '—•——', 'z': '——••',
    'A': '•—', 'B': '—•••', 'C': '—•—•', 'D': '—••',
    'E': '•', 'F': '••—•', 'G': '——•', 'H': '••••',
    'I': '••', 'J': '•———', 'K': '—•—', 'L': '•—••',
    'M': '——', 'N': '—•', 'O': '———', 'P': '•——•',
    'Q': '——•—', 'R': '•—•', 'S': '•••', 'T': '—',
    'U': '••—', 'V': '•••—', 'W': '•——', 'X': '—••—',
    'Y': '—•——', 'Z': '——••'
}

text = input("Введіть текст: ")

for char in text:
    if char in morze:
        print(morze[char], end=' ')
    else:
        print(' ', end=' ')