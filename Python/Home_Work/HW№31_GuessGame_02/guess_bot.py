import telebot  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ pyTelegramBotAPI
from telebot import types  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ç–∏–ø–∏ –¥–ª—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä —Ç–∞ –∫–Ω–æ–ø–æ–∫
from guess_game import GuessGame

TOKEN ='7620696692:AAGd8Uik3jjGGoTo42aBKeagsI47E1N4P6k' # –º—ñ–π —Ç–æ–∫–µ–Ω :)
#name: ¬´–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ¬ª
#bot: @Guess_the_number_HW_bot

if not TOKEN:
    print('–ü–æ–º–∏–ª–∫–∞: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ "@Guess_the_number_HW_bot".')
    print('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º.')
    exit(1)

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —ñ–≥–æ—Ä –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
user_games: dict[int, GuessGame] = {}
"""
'key'-chat_id: 'item1'-–æ–±'—î–∫—Ç GuessGame
"""

# --- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è Reply –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ ---

def create_main_reply_keyboard():
    """–°—Ç–≤–æ—Ä—é—î –≥–æ–ª–æ–≤–Ω—É Reply –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–æ—é '–ù–æ–≤–∞ –≥—Ä–∞'."""
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    new_game_button = types.KeyboardButton('–ù–æ–≤–∞ –≥—Ä–∞')
    markup.add(new_game_button)
    return markup

# --- –û–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ---

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    chat_id = message.chat.id
    user_name = message.from_user.first_name if message.from_user else '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á'

    welcome_message = f"""
–ü—Ä–∏–≤—ñ—Ç, {user_name}! –Ø –±–æ—Ç '–í–≥–∞–¥–∞–π —á–∏—Å–ª–æ'.
–Ø –∑–∞–≥–∞–¥–∞—é —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 100, –∞ —Ç–∏ –º–∞—î—à –π–æ–≥–æ –≤–≥–∞–¥–∞—Ç–∏.

–©–æ–± –ø–æ—á–∞—Ç–∏ –≥—Ä—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É '–ù–æ–≤–∞ –≥—Ä–∞' –Ω–∏–∂—á–µ.
–Ø–∫—â–æ —Ç–∏ –≤–∂–µ –≥—Ä–∞—î—à, –Ω–∞–¥—Å–∏–ª–∞–π –º–µ–Ω—ñ —á–∏—Å–ª–∞, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ —Å–ø—Ä–æ–±—É.
"""
    bot.send_message(chat_id, welcome_message, reply_markup=create_main_reply_keyboard())

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ—á–∞—Ç–∫—É –Ω–æ–≤–æ—ó –≥—Ä–∏ (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤)
def _start_game_for_user(chat_id):
    """–í–Ω—É—Ç—Ä—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—ñ–∫–∏ –ø–æ—á–∞—Ç–∫—É –Ω–æ–≤–æ—ó –≥—Ä–∏."""
    try:
        new_game = GuessGame(1, 100)
        user_games[chat_id] = new_game
        min_num, max_num = new_game.get_range()
        bot.send_message(chat_id, f'–Ø –∑–∞–≥–∞–¥–∞–≤ –Ω–æ–≤–µ —á–∏—Å–ª–æ –≤—ñ–¥ {min_num} –¥–æ {max_num}. –°–ø—Ä–æ–±—É–π –≤–≥–∞–¥–∞—Ç–∏!\n\n–í–≤–æ–¥—å —á–∏—Å–ª–∞ –ø—Ä—è–º–æ —Ç—É—Ç:', reply_markup=types.ReplyKeyboardRemove())
    except ValueError as e:
        bot.send_message(chat_id, f'–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –≥—Ä–∏: {e}', reply_markup=create_main_reply_keyboard())

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ newgame
@bot.message_handler(commands=['newgame'])
def start_new_game_command(message):
    chat_id = message.chat.id
    if chat_id in user_games:
         bot.send_message(chat_id, '–í–∏ –≤–∂–µ –≥—Ä–∞—î—Ç–µ. –ü–æ—á–∏–Ω–∞—î–º–æ –Ω–æ–≤—É –≥—Ä—É.')
         del user_games[chat_id] # –ó–∞–∫—ñ–Ω—á—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—é –≥—Ä—É, —è–∫—â–æ –≤–æ–Ω–∞ –±—É–ª–∞
    _start_game_for_user(chat_id)

# –û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–∞ –≥—Ä–∞"
@bot.message_handler(func=lambda message: message.text == '–ù–æ–≤–∞ –≥—Ä–∞' and message.content_type == 'text')
def start_new_game_button(message):
    chat_id = message.chat.id
    if chat_id in user_games:
         bot.send_message(chat_id, '–í–∏ –≤–∂–µ –≥—Ä–∞—î—Ç–µ. –ü–æ—á–∏–Ω–∞—î–º–æ –Ω–æ–≤—É –≥—Ä—É.')
         del user_games[chat_id] # –ó–∞–∫—ñ–Ω—á—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—é –≥—Ä—É, —è–∫—â–æ –≤–æ–Ω–∞ –±—É–ª–∞
    _start_game_for_user(chat_id)


# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ stopgame
@bot.message_handler(commands=['stopgame'])
def stop_game(message):
    chat_id = message.chat.id
    if chat_id in user_games:
        del user_games[chat_id]
        bot.send_message(chat_id, '–ì—Ä–∞ –∑—É–ø–∏–Ω–µ–Ω–∞.', reply_markup=create_main_reply_keyboard())
    else:
        bot.send_message(chat_id, '–í–∏ –∑–∞—Ä–∞–∑ –Ω–µ –≤ –≥—Ä—ñ.', reply_markup=create_main_reply_keyboard())


# –û–±—Ä–æ–±–Ω–∏–∫ –±—É–¥—å-—è–∫–∏—Ö —ñ–Ω—à–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—Å–ø—Ä–æ–± –≤–≥–∞–¥–∞—Ç–∏ —á–∏—Å–ª–æ)
@bot.message_handler(content_types=['text'])
def handle_guess(message):
    chat_id = message.chat.id
    user_text = message.text

    if user_text.startswith('/') or user_text == '–ù–æ–≤–∞ –≥—Ä–∞':
         return

    if chat_id not in user_games:
        bot.send_message(chat_id, '–¢–∏ —â–µ –Ω–µ —Ä–æ–∑–ø–æ—á–∞–≤ –≥—Ä—É. –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É "–ù–æ–≤–∞ –≥—Ä–∞", —â–æ–± –ø–æ—á–∞—Ç–∏!', reply_markup=create_main_reply_keyboard())
        return

    current_game = user_games[chat_id]

    try:
        guess = int(user_text)
    except ValueError:
        bot.send_message(chat_id, '–¶–µ –Ω–µ —Å—Ö–æ–∂–µ –Ω–∞ —á–∏—Å–ª–æüòâ. –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—Å–∏–ª–∞–π –º–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ —á–∏—Å–ª–∞!')
        return

    min_num, max_num = current_game.get_range()
    if not (min_num <= guess <= max_num):
        bot.send_message(chat_id, f'–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ {min_num} –¥–æ {max_num}.')
        return

    result = current_game.make_guess(guess)
    attempts = current_game.get_attempts()

    if result == 'correct':
        bot.send_message(chat_id, f'üéâ –ß—É–¥–æ–≤–æ! –¢–∏ –≤–≥–∞–¥–∞–≤ —á–∏—Å–ª–æ ({current_game.secret_number}) –∑–∞ {attempts} —Å–ø—Ä–æ–±!')
        del user_games[chat_id] # –í–∏–¥–∞–ª—è—î–º–æ –≥—Ä—É –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        bot.send_message(chat_id, '–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É "–ù–æ–≤–∞ –≥—Ä–∞", —â–æ–± –∑—ñ–≥—Ä–∞—Ç–∏ —â–µ —Ä–∞–∑!', reply_markup=create_main_reply_keyboard())
    elif result == 'high':
        bot.send_message(chat_id, '–ó–∞–Ω–∞–¥—Ç–æ –≤–∏—Å–æ–∫–æ! –°–ø—Ä–æ–±—É–π —â–µ.')
    elif result == 'low':
        bot.send_message(chat_id, '–ó–∞–Ω–∞–¥—Ç–æ –Ω–∏–∑—å–∫–æ! –°–ø—Ä–æ–±—É–π —â–µ.')


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
print('–ë–æ—Ç –í–≥–∞–¥–∞–π —á–∏—Å–ª–æ –∑–∞–ø—É—â–µ–Ω–æ...')
bot.polling(none_stop=True, interval=0, timeout=20)