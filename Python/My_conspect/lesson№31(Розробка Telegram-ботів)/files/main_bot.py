# main_bot.py
import os  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ os –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ —Ç–∞ admin_id
import telebot as tb
from telebot import types

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–∞—à Service
from bot_service import Service

from functools import partial

# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è —Ç–æ–∫–µ–Ω–∞ —Ç–∞ admin_id (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)
# –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —ó—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞:
# export TELEGRAM_BOT_TOKEN='<–í–ê–®_–¢–û–ö–ï–ù>'
# export TELEGRAM_ADMIN_ID='<–í–ê–®_ID>'
# –Ø–∫—â–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ, –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º (–º–µ–Ω—à –±–µ–∑–ø–µ—á–Ω–æ)
#TOKEN = os.getenv('TELEGRAM_BOT_TOKEN',
                  #'–¢–û–ö–ï–ù_–ó–ê_–ó–ê–ú–û–í–ß–£–í–ê–ù–ù–Ø–ú')  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
#ADMIN_ID_STR = os.getenv('TELEGRAM_ADMIN_ID', '0')  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à ID –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN ='7791357414:AAFnWP0c3lHIdjloUq8GD0ILL-EcXKOUAV4' # –≤–∞—à —Ç–æ–∫–µ–Ω —Å—é–¥–∏ :)
bot = tb.TeleBot(TOKEN)
service = Service()

ADMIN_ID_STR = 523793990

try:
    ADMIN_ID = int(ADMIN_ID_STR)
except ValueError:
    print("–ü–æ–º–∏–ª–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç ADMIN_ID. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è.")
    ADMIN_ID = 0  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 0 –∞–±–æ —ñ–Ω—à–µ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –Ω–µ –±—É–¥–µ –Ω—ñ—á–∏—ó–º chat_id






def send_question(user_id: int, username: str):
    """–ù–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ—Ç–æ—á–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏ –∞–±–æ –∑–∞–≤–µ—Ä—à—É—î —ó—ó."""
    question_data = service.send_question(user_id)

    if not question_data:
        # –ü–∏—Ç–∞–Ω–Ω—è –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å, –∑–∞–≤–µ—Ä—à—É—î–º–æ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É
        score_result = service.end_quiz(user_id)  # –û—á—ñ–∫—É—î–º–æ —Ä—è–¥–æ–∫ 'score/total'

        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        bot.send_message(user_id, text=f"'–í—ñ–∫—Ç–æ—Ä–∏–Ω—É –∑–∞–∫—ñ–Ω—á–µ–Ω–æ! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score_result}!'")
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        bot.send_message(ADMIN_ID, text=f"'{username}' –ø—Ä–æ–π—à–æ–≤ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É —Ç–∞ –æ—Ç—Ä–∏–º–∞–≤ '{score_result}'!")
        return

    # –ü–∏—Ç–∞–Ω–Ω—è —î, –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –π–æ–≥–æ
    markup = types.InlineKeyboardMarkup()

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–æ–∫
    for index, option in enumerate(question_data['options']):
        # –£ callback_data –ø–µ—Ä–µ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —ñ–Ω–¥–µ–∫—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, service.check_answer
        # –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î —Ü–µ–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        markup.add(types.InlineKeyboardButton(text=f"'{option}'", callback_data=f'quizanswer_{index}'))

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –ø–∏—Ç–∞–Ω–Ω—è
    bot.send_message(user_id, text=f"'{question_data['question']}'", reply_markup=markup)


def send_password(message: types.Message):
    """–ì–µ–Ω–µ—Ä—É—î —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –ø–∞—Ä–æ–ª—å –∑–∞ –æ—Ç—Ä–∏–º–∞–Ω–æ—é –¥–æ–≤–∂–∏–Ω–æ—é."""
    password_len_str = message.text  # –û—Ç—Ä–∏–º—É—î–º–æ —Ä—è–¥–æ–∫ –∑ –¥–æ–≤–∂–∏–Ω–æ—é
    password = service.generate_password(password_len_str)

    if password is None:  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –±—É–ª–∞ —É—Å–ø—ñ—à–Ω–æ—é (–ø–æ–≤–µ—Ä—Ç–∞—î None –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ)
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        bot.send_message(message.chat.id, text="'–î–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–æ–ª—é –Ω–µ–≤—ñ—Ä–Ω–∞, –∞–±–æ –≤–∏ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!'")
        return

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –ø–∞—Ä–æ–ª—é
    bot.send_message(message.chat.id, text=f"'–í–∞—à –ø–∞—Ä–æ–ª—å: {password}'")


def send_admin_answer(message: types.Message, user_id: int):
    """–ù–∞–¥—Å–∏–ª–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∞–¥–º—ñ–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    bot.send_message(user_id,
                     text=f"'–í—ñ–¥–ø–æ–≤—ñ–¥—å –∞–¥–º—ñ–Ω–∞ –Ω–∞ —Ç–≤–æ—é –æ—Ü—ñ–Ω–∫—É: \"{message.text}\"'\n\n'–¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞.'")


@bot.message_handler(commands=['start'])
def start(message: types.Message):
    """–û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥—É /start —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."""
    btn_1 = types.KeyboardButton('–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—éüß®')
    btn_2 = types.KeyboardButton('–í—ñ–¥–≥—É–∫–∏üòé')
    btn_3 = types.KeyboardButton('–í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ü§ì')
    btn_4 = types.KeyboardButton('–¶—ñ–∫–∞–≤—ñ —Å–∞–π—Ç–∏üòâ')

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    markup.add(btn_1, btn_2)
    markup.add(btn_3, btn_4)

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
    bot.send_message(message.chat.id,
                     text="'–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤–∏–π –±–æ—Ç!ü§ì'",
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_text_message(message: types.Message):
    """–û–±—Ä–æ–±–ª—è—î —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é)."""
    message_text = message.text
    chat_id = message.chat.id
    # print(f"Received text message from {chat_id}: {message_text}") # –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –≤ case
    match message_text:
        case '–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—éüß®':
            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
            bot_message = bot.send_message(chat_id, text="'–û–ö! –ù–∞–¥—ñ—à–ª–∏ –¥–æ–≤–∂–∏–Ω—É –ø–∞—Ä–æ–ª—é –≤—ñ–¥ 8 –¥–æ 35üòÄ'")
            bot.register_next_step_handler(bot_message, send_password)
        case '–í—ñ–¥–≥—É–∫–∏üòé':
            btn_5 = types.InlineKeyboardButton(text="'5üòç'", callback_data=f'grade_5')
            btn_4 = types.InlineKeyboardButton(text="'4üòä'", callback_data=f'grade_4')
            btn_3 = types.InlineKeyboardButton(text="'3üòì'", callback_data=f'grade_3')
            btn_2 = types.InlineKeyboardButton(text="'2ü§¢'", callback_data=f'grade_2')
            btn_1 = types.InlineKeyboardButton(text="'1ü§Æ'", callback_data=f'grade_1')

            markup = types.InlineKeyboardMarkup()
            markup.add(btn_5, btn_4, btn_3, btn_2, btn_1, row_width=1)

            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
            bot.send_message(chat_id, text="'–û–±–µ—Ä–∏ –æ—Ü—ñ–Ω–∫—É, —è–∫—É –ø–æ—Å—Ç–∞–≤–∏—à –º–µ–Ω—ñ:'", reply_markup=markup)
        case '–í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ü§ì':
            markup = types.InlineKeyboardMarkup()
            titles = service.get_titles(chat_id)  # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤ –≤—ñ–∫—Ç–æ—Ä–∏–Ω

            if titles is None:
                # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
                bot.send_message(chat_id, "'–¢–∏ –≤–∂–µ –ø—Ä–æ—Ö–æ–¥–∏—à –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É. –ó–∞–≤–µ—Ä—à–∏ –ø–æ—Ç–æ—á–Ω—É, –ø–µ—Ä—à –Ω—ñ–∂ –ø–æ—á–∞—Ç–∏ –Ω–æ–≤—É.'")
                return

            if not titles:  # –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ—Ä–æ–∂–Ω—ñ–π (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è quiz_data.json)
                # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
                bot.send_message(chat_id, "'–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –≤—ñ–∫—Ç–æ—Ä–∏–Ω. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.'")
                return

            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–æ–∫ –∑ –Ω–∞–∑–≤–∞–º–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω
            for t in titles:
                markup.add(types.InlineKeyboardButton(text=f"'{t}'", callback_data=f'quizstart_{t}'))

            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
            bot.send_message(chat_id, text="'–û–±–µ—Ä–∏ —Ç–µ–º—É –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏!'", reply_markup=markup)
        case '–¶—ñ–∫–∞–≤—ñ —Å–∞–π—Ç–∏üòâ':
            btn_1 = types.InlineKeyboardButton(text="'–ü–∞–∫–µ—Ç–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä Python'", url='https://pypi.org/')
            btn_2 = types.InlineKeyboardButton(text="'–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π —Å–∞–π—Ç Python'", url='https://www.python.org/')

            markup = types.InlineKeyboardMarkup()
            markup.add(btn_1, btn_2, row_width=1)

            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
            bot.send_message(chat_id, text="'–û—Å—å —Ü—ñ–∫–∞–≤—ñ —Å–∞–π—Ç–∏ –¥–ª—è —Ç–µ–±–µ:'", reply_markup=markup)
        case _:
            # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
            bot.send_message(chat_id, text="'–Ø —Ç–µ–±–µ –Ω–µ —Ä–æ–∑—É–º—ñ—é('")


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('grade'))
def get_grade(callback: types.CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –æ—Ü—ñ–Ω–∫–∏."""
    # –û—Ç—Ä–∏–º—É—î–º–æ –æ—Ü—ñ–Ω–∫—É (–æ—Å—Ç–∞–Ω–Ω—è —Ü–∏—Ñ—Ä–∞ –≤ callback_data 'grade_X')
    grade = callback.data[-1]
    username = callback.from_user.username if callback.from_user.username else callback.from_user.first_name
    user_id = callback.from_user.id
    call_id = callback.id

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
    bot.answer_callback_query(call_id, text="'–î—è–∫—É—é –∑–∞ –æ—Ü—ñ–Ω–∫—É!'")

    # –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ü—ñ–Ω–∫–∏, –ø—Ä–∏–±–∏—Ä–∞—é—á–∏ —ó—Ö
    bot.edit_message_text(chat_id=callback.message.chat.id,
                          message_id=callback.message.id,
                          # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
                          text=f"'–û—Ü—ñ–Ω–∫—É {grade} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ!'",  # –ú–æ–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –æ—Ü—ñ–Ω–∫—É
                          reply_markup=None)  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É

    # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    markup = types.InlineKeyboardMarkup()
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω–∞, —â–æ–± –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ —Ü—å–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
    markup.add(types.InlineKeyboardButton(text="'–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏:'", callback_data=f'adminanswer_{user_id}'))

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫ –¥–ª—è —Ç–µ–∫—Å—Ç—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    bot.send_message(ADMIN_ID, text=f"'{username}' (ID: {user_id}) –ø–æ—Å—Ç–∞–≤–∏–≤ —Ç–æ–±—ñ –æ—Ü—ñ–Ω–∫—É '{grade}'!",
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('adminanswer'))
def admin_answer_prompt(callback: types.CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ '–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏' –∞–¥–º—ñ–Ω–æ–º."""
    user_id_to_reply = int(callback.data.split('_')[1])
    call_id = callback.id

    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
    bot.answer_callback_query(call_id, text="'–ü–∏—à–∏ —Å–≤–æ—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!'")

    # –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω–∞
    bot.edit_message_text(chat_id=callback.message.chat.id,
                          message_id=callback.message.id,
                          # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
                          text=f"'–ü–∏—à–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ ID {user_id_to_reply} –Ω–∏–∂—á–µ:'",
                          reply_markup=None)  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É

    # –†–µ—î—Å—Ç—Ä—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫: –æ—á—ñ–∫—É—î–º–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –∞–¥–º—ñ–Ω–∞
    bot.register_next_step_handler(callback.message, partial(send_admin_answer, user_id=user_id_to_reply))


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('quizstart'))
def start_quiz_callback(callback: types.CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ '–ü–æ—á–∞—Ç–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É'."""
    user_id = callback.from_user.id
    quiz_name = callback.data.split('_')[1]

    bot.answer_callback_query(callback.id, text="'–í—ñ–∫—Ç–æ—Ä–∏–Ω—É —Ä–æ–∑–ø–æ—á–∞—Ç–æ!'")

    # –°–ø—Ä–æ–±—É—î–º–æ –ø–æ—á–∞—Ç–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É –≤ service
    if service.start_quiz(user_id, quiz_name):
        # –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–±–æ—Ä–æ–º —Ç–µ–º–∏
        bot.edit_message_text(chat_id=callback.message.chat.id,
                              message_id=callback.message.id,
                              # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
                              text=f"'–í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ \"{quiz_name}\" —Ä–æ–∑–ø–æ—á–∞—Ç–∞!'",  # –ú–æ–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–∑–≤—É —Ç–µ–º–∏
                              reply_markup=None)  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–µ—Ä—à–µ –ø–∏—Ç–∞–Ω–Ω—è
        # –ü–µ—Ä–µ–¥–∞—î–º–æ username –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –∞–¥–º—ñ–Ω—É –≤ send_question
        send_question(user_id,
                      callback.from_user.username if callback.from_user.username else callback.from_user.first_name)
    else:
        # –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ –Ω–µ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å (–º–æ–∂–ª–∏–≤–æ, –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∞ –∞–±–æ —Ç–µ–º–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞)
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        bot.edit_message_text(chat_id=callback.message.chat.id,
                              message_id=callback.message.id,
                              text="'–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ –∞–±–æ –æ–±–µ—Ä–∏ —ñ–Ω—à—É —Ç–µ–º—É.'",
                              reply_markup=None)  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É
        # –ú–æ–∂–Ω–∞ —Ç–∞–∫–æ–∂ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –æ–∫—Ä–µ–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –≤ –≥—Ä—ñ, –∑–∞–º—ñ—Å—Ç—å —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('quizanswer'))
def check_answer_callback(callback: types.CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∏."""
    user_id = callback.from_user.id
    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω–¥–µ–∫—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ callback_data
    user_answer_index = int(callback.data.split('_')[1])
    call_id = callback.id

    # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback
    bot.answer_callback_query(call_id, text="'–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!'")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤ service
    answer_result = service.check_answer(user_id, user_answer_index)  # –û—á—ñ–∫—É—î–º–æ True/False –∞–±–æ None

    # –†–µ–¥–∞–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–∏—Ç–∞–Ω–Ω—è–º, —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    if answer_result is not None:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        edit_text = "'–í—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∞–≤–∏–ª—å–Ω–∞! ‚úÖ'" if answer_result else "'–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞! ‚ùå'"
        try:
            bot.edit_message_text(chat_id=callback.message.chat.id,
                                  message_id=callback.message.id,
                                  text=edit_text,
                                  reply_markup=None)  # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        except Exception as e:
            print(f"Error editing message {callback.message.id} for user {user_id}: {e}")
            # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–Ω–∞–¥—Ç–æ —Å—Ç–∞—Ä–µ –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–µ),
            # –º–æ–∂–Ω–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
            # bot.send_message(user_id, text=edit_text)

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è (–∞–±–æ –∑–∞–≤–µ—Ä—à—É—î–º–æ –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É)
        # –ü–µ—Ä–µ–¥–∞—î–º–æ username –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –∞–¥–º—ñ–Ω—É
        send_question(user_id,
                      callback.from_user.username if callback.from_user.username else callback.from_user.first_name)

    else:
        # –Ø–∫—â–æ answer_result None, –∑–Ω–∞—á–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω—ñ–π –≤—ñ–∫—Ç–æ—Ä–∏–Ω—ñ
        # –¶–µ –º–æ–∂–µ —Å—Ç–∞—Ç–∏—Å—è, —è–∫—â–æ –≤—ñ–Ω –Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
        bot.send_message(user_id,
                         "'–¶—è –≤—ñ–∫—Ç–æ—Ä–∏–Ω–∞ –≤–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –∞–±–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π –ø–æ—á–∞—Ç–∏ –Ω–æ–≤—É –≤—ñ–∫—Ç–æ—Ä–∏–Ω—É / –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ü§ì.'")


# --- –û–±—Ä–æ–±–Ω–∏–∫ —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ) ---
# –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É, —â–æ –Ω–µ —î –∫–æ–º–∞–Ω–¥–æ—é –∞–±–æ –∫–Ω–æ–ø–∫–æ—é –º–µ–Ω—é
@bot.message_handler(
    func=lambda message: message.text not in ['–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–∞—Ä–æ–ª—éüß®', '–í—ñ–¥–≥—É–∫–∏üòé', '–í—ñ–∫—Ç–æ—Ä–∏–Ω–∞ü§ì', '–¶—ñ–∫–∞–≤—ñ —Å–∞–π—Ç–∏üòâ'] and
                         message.text[0] != '/')
def handle_other_text(message: types.Message):
    chat_id = message.chat.id
    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –æ–¥–∏–Ω–∞—Ä–Ω–∏—Ö –∑–æ–≤–Ω—ñ—à–Ω—ñ—Ö —Ç–∞ –ø–æ–¥–≤—ñ–π–Ω–∏—Ö –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ª–∞–ø–æ–∫
    bot.send_message(chat_id, "'–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ç–≤–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∞–±–æ –∫–æ–º–∞–Ω–¥–∏.'")


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
bot.polling(none_stop=True)